{"ast":null,"code":"import _taggedTemplateLiteral from\"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n    font-size: 11px;\\n    width: 64px;\\n    margin: 3px 5px 0;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    width: 16vw;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    width: 20vw;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    border: 1px solid #cccccc;\\n    width: 16vw;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';var TableData=styled.td(_templateObject());var TableDataName=styled(TableData)(_templateObject2());var TableDataControls=styled(TableData)(_templateObject3());var Button=styled.button(_templateObject4());export default function Coin(props){var handleRefresh=function handleRefresh(event){// Refresh the screen\nevent.preventDefault();props.handleRefresh(props.tickerId);};var handleBuy=function handleBuy(event){// Purchase tokens\nevent.preventDefault();props.handleTransaction(true,props.tickerId);};var handleSell=function handleSell(event){// Sell tokens\nevent.preventDefault();props.handleTransaction(false,props.tickerId);};var balanceDisplay=props.showBalance?/*#__PURE__*/React.createElement(TableData,null,props.balance):'-';return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(TableDataName,null,props.name),/*#__PURE__*/React.createElement(TableData,null,props.ticker),balanceDisplay,/*#__PURE__*/React.createElement(TableData,null,\"$\",props.price),/*#__PURE__*/React.createElement(TableDataControls,null,/*#__PURE__*/React.createElement(\"form\",{action:\"#\",method:\"POST\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-info\",onClick:handleRefresh},\"Refresh\"),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-warning\",onClick:handleBuy},\"Buy\"),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-danger\",onClick:handleSell},\"Sell\"))));}","map":{"version":3,"sources":["/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/components/Coin.jsx"],"names":["React","styled","TableData","td","TableDataName","TableDataControls","Button","button","Coin","props","handleRefresh","event","preventDefault","tickerId","handleBuy","handleTransaction","handleSell","balanceDisplay","showBalance","balance","name","ticker","price"],"mappings":"+3BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGD,MAAM,CAACE,EAAV,mBAAf,CAKA,GAAMC,CAAAA,aAAa,CAAGH,MAAM,CAACC,SAAD,CAAT,oBAAnB,CAIA,GAAMG,CAAAA,iBAAiB,CAAGJ,MAAM,CAACC,SAAD,CAAT,oBAAvB,CAIA,GAAMI,CAAAA,MAAM,CAAGL,MAAM,CAACM,MAAV,oBAAZ,CAMA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAEhC,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7B;AACAA,KAAK,CAACC,cAAN,GACAH,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACI,QAA1B,EACH,CAJD,CAMA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACH,KAAD,CAAW,CACzB;AACAA,KAAK,CAACC,cAAN,GACAH,KAAK,CAACM,iBAAN,CAAwB,IAAxB,CAA8BN,KAAK,CAACI,QAApC,EACH,CAJD,CAMA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,KAAD,CAAW,CAC1B;AACAA,KAAK,CAACC,cAAN,GACAH,KAAK,CAACM,iBAAN,CAAwB,KAAxB,CAA+BN,KAAK,CAACI,QAArC,EACH,CAJD,CAMA,GAAII,CAAAA,cAAc,CAAGR,KAAK,CAACS,WAAN,cACjB,oBAAC,SAAD,MAAYT,KAAK,CAACU,OAAlB,CADiB,CACwB,GAD7C,CAGA,mBACI,2CACI,oBAAC,aAAD,MAAgBV,KAAK,CAACW,IAAtB,CADJ,cAEI,oBAAC,SAAD,MAAYX,KAAK,CAACY,MAAlB,CAFJ,CAGKJ,cAHL,cAII,oBAAC,SAAD,UAAaR,KAAK,CAACa,KAAnB,CAJJ,cAKI,oBAAC,iBAAD,mBACI,4BAAM,MAAM,CAAC,GAAb,CAAiB,MAAM,CAAC,MAAxB,eACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,cAAlB,CACI,OAAO,CAAEZ,aADb,YADJ,cAII,oBAAC,MAAD,EAAQ,SAAS,CAAC,iBAAlB,CACI,OAAO,CAAEI,SADb,QAJJ,cAOI,oBAAC,MAAD,EAAQ,SAAS,CAAC,gBAAlB,CACI,OAAO,CAAEE,UADb,SAPJ,CADJ,CALJ,CADJ,CAqBH","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst TableData = styled.td`\n    border: 1px solid #cccccc;\n    width: 16vw;\n`;\n\nconst TableDataName = styled(TableData)`\n    width: 20vw;\n`;\n\nconst TableDataControls = styled(TableData)`\n    width: 16vw;\n`;\n\nconst Button = styled.button`\n    font-size: 11px;\n    width: 64px;\n    margin: 3px 5px 0;\n`;\n\nexport default function Coin(props) {\n\n    const handleRefresh = (event) => {\n        // Refresh the screen\n        event.preventDefault();\n        props.handleRefresh(props.tickerId);\n    }\n\n    const handleBuy = (event) => {\n        // Purchase tokens\n        event.preventDefault();\n        props.handleTransaction(true, props.tickerId);\n    }\n\n    const handleSell = (event) => {\n        // Sell tokens\n        event.preventDefault();\n        props.handleTransaction(false, props.tickerId);\n    }\n\n    let balanceDisplay = props.showBalance ?\n        <TableData>{props.balance}</TableData> : '-';\n\n    return (\n        <tr>\n            <TableDataName>{props.name}</TableDataName>\n            <TableData>{props.ticker}</TableData>\n            {balanceDisplay}\n            <TableData>${props.price}</TableData>\n            <TableDataControls>\n                <form action=\"#\" method=\"POST\">\n                    <Button className='btn btn-info' \n                        onClick={handleRefresh}>Refresh\n                    </Button>\n                    <Button className='btn btn-warning' \n                        onClick={handleBuy}>Buy\n                    </Button>\n                    <Button className='btn btn-danger' \n                        onClick={handleSell}>Sell\n                    </Button>\n                </form>\n            </TableDataControls>\n        </tr>\n    );\n}\n\nCoin.propTypes = {\n    name: PropTypes.string.isRequired,\n    ticker: PropTypes.string.isRequired,\n    balance: PropTypes.number.isRequired,\n    price: PropTypes.number.isRequired,\n    showBalance: PropTypes.bool.isRequired,\n}"]},"metadata":{},"sourceType":"module"}