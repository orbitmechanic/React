{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js\";\nimport React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\nimport axios from 'axios';\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`;\nconst COIN_COUNT = 10;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      showBalance: true,\n      coinData: []\n    };\n\n    this.componentDidMount = async () => {\n      // Retrieve id's\n      const repsonse = await axios.get('https://api.coinpaprika.com/v1/coins');\n      const coinIds = repsonse.data.slice(0, COIN_COUNT).map(coin => coin.id); // Retrieve coin data array\n\n      const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n      const promises = coinIds.map(key => axios.get(tickerUrl + key));\n      const coinData = await Promise.all(promises); // Retrieve the prices\n\n      const coinPriceData = coinData.map(function (response) {\n        coin = response.data;\n        return {\n          key: coin.id,\n          name: coin.name,\n          ticker: coin.symbol,\n          balance: 0,\n          price: coin.quotes.USD.price\n        };\n      });\n      this.setState({\n        coinData\n      });\n    };\n\n    this.toggleBalanceVisibility = () => {\n      this.setState({\n        showBalance: !this.state.showBalance\n      });\n    };\n\n    this.handleRefresh = valueChangeTicker => {\n      const newCoinData = this.state.coinData.map(values => {\n        let newValues = { ...values\n        };\n\n        if (valueChangeTicker === values.ticker) {\n          let randomPercentage = 0.995 + Math.random() * 0.01;\n          newValues.price *= randomPercentage;\n        }\n\n        return newValues;\n      });\n      this.setState({\n        coinData: newCoinData\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      apName: this.state.apName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AccountBalance, {\n      amount: this.state.balance,\n      showBalance: this.state.showBalance,\n      toggleBalanceVisibility: this.toggleBalanceVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CoinList, {\n      coinData: this.state.coinData,\n      handleRefresh: this.handleRefresh,\n      showBalance: this.state.showBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js"],"names":["React","AppHeader","CoinList","AccountBalance","styled","axios","AppStyle","div","COIN_COUNT","App","Component","state","apName","balance","showBalance","coinData","componentDidMount","repsonse","get","coinIds","data","slice","map","coin","id","tickerUrl","promises","key","Promise","all","coinPriceData","response","name","ticker","symbol","price","quotes","USD","setState","toggleBalanceVisibility","handleRefresh","valueChangeTicker","newCoinData","values","newValues","randomPercentage","Math","random","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AppHeader from './components/AppHeader';\r\nimport CoinList from './components/CoinList';\r\nimport AccountBalance from './components/AccountBalance';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst AppStyle = styled.div`\r\n  text-align: center;\r\n  background-color: darkslategray;\r\n  color: #cccccc;\r\n`\r\nconst COIN_COUNT = 10;\r\nclass App extends React.Component {\r\n  state = {\r\n      apName: 'Coin Exchange',\r\n      balance: 10000,\r\n      showBalance: true,\r\n      coinData: [],\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    // Retrieve id's\r\n    const repsonse = await axios.get('https://api.coinpaprika.com/v1/coins')\r\n    const coinIds = repsonse.data.slice(0,COIN_COUNT).map(coin => coin.id);\r\n\r\n    // Retrieve coin data array\r\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n    const promises = coinIds.map(key => axios.get(tickerUrl + key));\r\n    const coinData = await Promise.all(promises);\r\n\r\n    // Retrieve the prices\r\n    const coinPriceData = coinData.map(function(response) {\r\n      coin = response.data;\r\n      return {\r\n        key:    coin.id,\r\n        name:   coin.name,\r\n        ticker: coin.symbol, \r\n        balance: 0,\r\n        price:  coin.quotes.USD.price,\r\n      };\r\n    })\r\n\r\n    this.setState({ coinData});\r\n  };   \r\n\r\n  toggleBalanceVisibility = () => {\r\n    this.setState({showBalance:!this.state.showBalance});\r\n  }\r\n\r\n  handleRefresh = (valueChangeTicker) => {\r\n    const newCoinData = this.state.coinData.map((values) => {\r\n      let newValues = {...values};\r\n      if ( valueChangeTicker === values.ticker) {\r\n        let randomPercentage = 0.995 + Math.random()*0.01;\r\n        newValues.price *= randomPercentage;\r\n      }\r\n      return newValues;\r\n    });  \r\n    this.setState({coinData: newCoinData});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppStyle>\r\n        <AppHeader \r\n          apName={this.state.apName}/>\r\n        <AccountBalance \r\n          amount={this.state.balance} \r\n          showBalance={this.state.showBalance}\r\n          toggleBalanceVisibility={this.toggleBalanceVisibility}/>\r\n        <CoinList \r\n          coinData={this.state.coinData} \r\n          handleRefresh={this.handleRefresh} \r\n          showBalance={this.state.showBalance} />\r\n      </AppStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}