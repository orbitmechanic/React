{"ast":null,"code":"import _objectSpread from\"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  background-color: darkslategray;\\n  color: #cccccc;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from'react';import AppHeader from'./components/AppHeader';import CoinList from'./components/CoinList';import AccountBalance from'./components/AccountBalance';import styled from'styled-components';import axios from'axios';//import 'bootstrap/dist/css/bootstrap.min.css';\nimport'bootswatch/dist/superhero/bootstrap.min.css';import'@fortawesome/fontawesome-free/js/all';var AppStyle=styled.div(_templateObject());var COIN_COUNT=10;var formatPrice=function formatPrice(price){return parseFloat(Number(price).toFixed(2));};function App(props){// const [balance, setBalance] = useState(10000);\nvar _useState=useState(10000),_useState2=_slicedToArray(_useState,2),balance=_useState2[0],setBalance=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showBalance=_useState4[0],setShowBalance=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),coinData=_useState6[0],setCoinData=_useState6[1];var apName='Coin Exchange';var getIDs=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var repsonse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://api.coinpaprika.com/v1/coins');case 2:repsonse=_context.sent;return _context.abrupt(\"return\",repsonse.data.slice(0,COIN_COUNT).map(function(coin){return coin.id;}));case 4:case\"end\":return _context.stop();}}},_callee);}));return function getIDs(){return _ref.apply(this,arguments);};}();var getCoinData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(coinIds){var tickerUrl,promises;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// Retrieve coin data array for given coin id's.\ntickerUrl='https://api.coinpaprika.com/v1/tickers/';promises=coinIds.map(function(key){return axios.get(tickerUrl+key);});_context2.next=4;return Promise.all(promises);case 4:return _context2.abrupt(\"return\",_context2.sent);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getCoinData(_x){return _ref2.apply(this,arguments);};}();var extractPrices=function extractPrices(coinData){// Extract prices from given coinData array\nreturn coinData.map(function(response){var coin=response.data;return{key:coin.id,name:coin.name,ticker:coin.symbol,balance:0,price:formatPrice(coin.quotes.USD.price)};});};var loadAllAPIData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var coinIds,coinData,coinPriceData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return getIDs();case 2:coinIds=_context3.sent;_context3.next=5;return getCoinData(coinIds);case 5:coinData=_context3.sent;coinPriceData=extractPrices(coinData);setCoinData(coinPriceData);case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function loadAllAPIData(){return _ref3.apply(this,arguments);};}();useEffect(function(){if(coinData.length===0){// component did mount\nloadAllAPIData();}else{// component did update\n}});var handleBrrrr=function handleBrrrr(){setBalance(function(oldBalance){return oldBalance+1200;});};var handleTransaction=function handleTransaction(isBuy,valueChangeID){var balanceChange=window.prompt('How much?')*(isBuy?1:-1);var newCoinData=coinData.map(function(values){var newValues=_objectSpread({},values);if(valueChangeID===values.key){if(isBuy){if(balance<newValues.price*balanceChange){alert('Insufficient funds for this purchase.');return values;}}else{if(values.balance+balanceChange<0){alert('Insufficient holdings for this sell order.');return values;}}// Transaction is possible.\nnewValues.balance+=balanceChange;setBalance(function(oldBalance){return oldBalance-balanceChange*newValues.price;});}return newValues;});setCoinData(newCoinData);};var toggleBalanceVisibility=function toggleBalanceVisibility(){setShowBalance(function(oldValue){return!oldValue;});};var handleRefresh=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(valueChangeId){var tickerUrl,response,newPrice,newCoinData;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:tickerUrl=\"https://api.coinpaprika.com/v1/tickers/\".concat(valueChangeId);_context4.next=3;return axios.get(tickerUrl);case 3:response=_context4.sent;newPrice=formatPrice(response.data.quotes.USD.price);newCoinData=coinData.map(function(values){var newValues=_objectSpread({},values);if(valueChangeId===values.key){newValues.price=newPrice;}return newValues;});setCoinData(newCoinData);case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function handleRefresh(_x2){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(AppStyle,null,/*#__PURE__*/React.createElement(AppHeader,{apName:apName}),/*#__PURE__*/React.createElement(AccountBalance,{amount:balance,showBalance:showBalance,handleBrrrr:handleBrrrr,toggleBalanceVisibility:toggleBalanceVisibility}),/*#__PURE__*/React.createElement(CoinList,{coinData:coinData,handleRefresh:handleRefresh,handleTransaction:handleTransaction,showBalance:showBalance}));}export default App;","map":{"version":3,"sources":["/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js"],"names":["React","useState","useEffect","AppHeader","CoinList","AccountBalance","styled","axios","AppStyle","div","COIN_COUNT","formatPrice","price","parseFloat","Number","toFixed","App","props","balance","setBalance","showBalance","setShowBalance","coinData","setCoinData","apName","getIDs","get","repsonse","data","slice","map","coin","id","getCoinData","coinIds","tickerUrl","promises","key","Promise","all","extractPrices","response","name","ticker","symbol","quotes","USD","loadAllAPIData","coinPriceData","length","handleBrrrr","oldBalance","handleTransaction","isBuy","valueChangeID","balanceChange","window","prompt","newCoinData","values","newValues","alert","toggleBalanceVisibility","oldValue","handleRefresh","valueChangeId","newPrice"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport AppHeader from './components/AppHeader';\r\nimport CoinList from './components/CoinList';\r\nimport AccountBalance from './components/AccountBalance';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootswatch/dist/superhero/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n\r\nconst AppStyle = styled.div`\r\n  text-align: center;\r\n  background-color: darkslategray;\r\n  color: #cccccc;\r\n`\r\nconst COIN_COUNT = 10;\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(2));\r\n\r\nfunction App (props) {\r\n\r\n  // const [balance, setBalance] = useState(10000);\r\n  const [balance, setBalance] = useState(10000);\r\n  const [showBalance, setShowBalance] = useState(true);\r\n  const [coinData, setCoinData] = useState([]);\r\n  const apName = 'Coin Exchange';\r\n\r\n  const getIDs = async () => {\r\n    // Fetch the IDs of first COIN_COUNT items.\r\n    const repsonse = await axios.get('https://api.coinpaprika.com/v1/coins')\r\n    return repsonse.data.slice(0,COIN_COUNT).map(coin => coin.id);\r\n  }\r\n\r\n  const getCoinData = async(coinIds) => {\r\n    // Retrieve coin data array for given coin id's.\r\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n    const promises = coinIds.map(key => axios.get(tickerUrl + key));\r\n    return await Promise.all(promises);\r\n  }\r\n\r\n  const extractPrices = (coinData) => {\r\n    // Extract prices from given coinData array\r\n    return coinData.map(function(response) {\r\n      const coin = response.data;\r\n      return {\r\n        key:    coin.id,\r\n        name:   coin.name,\r\n        ticker: coin.symbol, \r\n        balance: 0,\r\n        price:  formatPrice(coin.quotes.USD.price),\r\n      };\r\n    });\r\n  }\r\n\r\n  const loadAllAPIData = async () => {\r\n    // Load API data for all items.\r\n    const coinIds = await getIDs();\r\n    const coinData = await getCoinData(coinIds);\r\n    const coinPriceData = extractPrices(coinData);\r\n    setCoinData(coinPriceData);\r\n  }\r\n\r\n  useEffect (function() {\r\n    if (coinData.length === 0){\r\n      // component did mount\r\n      loadAllAPIData();\r\n    } else {\r\n      // component did update\r\n    }\r\n  });\r\n\r\n  const handleBrrrr = () => {\r\n    setBalance( oldBalance => oldBalance + 1200);\r\n  }\r\n\r\n  const handleTransaction = ( isBuy, valueChangeID) => {\r\n    var balanceChange = window.prompt('How much?') * (isBuy ? 1: -1);\r\n    const newCoinData = coinData.map( function(values) {\r\n      let newValues = {...values};\r\n      if ( valueChangeID === values.key) {\r\n        if ( isBuy ) {\r\n          if ( balance < newValues.price*balanceChange ) {\r\n            alert('Insufficient funds for this purchase.');\r\n            return values;\r\n          } \r\n        } else {\r\n          if (values.balance + balanceChange < 0) {\r\n            alert('Insufficient holdings for this sell order.');\r\n            return values;\r\n          }\r\n        } // Transaction is possible.\r\n        newValues.balance += balanceChange;\r\n        setBalance( oldBalance => oldBalance - balanceChange*newValues.price);\r\n      }\r\n      return newValues;\r\n    });\r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n  const toggleBalanceVisibility = () => {\r\n    setShowBalance(oldValue => !oldValue);\r\n  }\r\n\r\n  const handleRefresh = async (valueChangeId) => {\r\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\r\n    const response = await axios.get(tickerUrl);\r\n    const newPrice = formatPrice(response.data.quotes.USD.price);\r\n    const newCoinData = coinData.map((values) => {\r\n      let newValues = {...values};\r\n      if ( valueChangeId === values.key) {\r\n        newValues.price = newPrice;\r\n      }\r\n      return newValues;\r\n    });  \r\n    setCoinData(newCoinData);\r\n  }\r\n\r\n  return (\r\n    <AppStyle>\r\n      <AppHeader \r\n        apName={apName}/>\r\n      <AccountBalance \r\n        amount={balance} \r\n        showBalance={showBalance}\r\n        handleBrrrr={handleBrrrr}\r\n        toggleBalanceVisibility={toggleBalanceVisibility}/>\r\n      <CoinList \r\n        coinData={coinData} \r\n        handleRefresh={handleRefresh} \r\n        handleTransaction={handleTransaction}\r\n        showBalance={showBalance} />\r\n    </AppStyle>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}