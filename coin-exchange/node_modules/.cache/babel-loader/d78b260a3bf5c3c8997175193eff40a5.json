{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/components/Coin/Coin.jsx\";\nimport React, { Component } from 'react';\nimport './Coin.css';\nimport PropTypes from 'prop-types';\nexport default class Coin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: this.props.price\n    };\n  }\n\n  componentDidMount() {\n    const callback = () => {\n      // set the state to a new random value\n      const randomPercentage = 0.995 + Math.random() * 0.01;\n      this.setState(function (oldState) {\n        return {\n          price: oldState.price * randomPercentage\n        };\n      });\n    };\n\n    setInterval(callback, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"coin-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, this.props.ticker), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"$\", this.state.price));\n  }\n\n}\nCoin.propTypes = {\n  name: PropTypes.string.isRequired,\n  ticker: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/components/Coin/Coin.jsx"],"names":["React","Component","PropTypes","Coin","constructor","props","state","price","componentDidMount","callback","randomPercentage","Math","random","setState","oldState","setInterval","render","name","ticker","propTypes","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACxCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AADT,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,QAAQ,GAAG,MAAM;AACnB;AACA,YAAMC,gBAAgB,GAAG,QAAQC,IAAI,CAACC,MAAL,KAAc,IAA/C;AACA,WAAKC,QAAL,CAAe,UAASC,QAAT,EAAmB;AAC9B,eAAO;AACHP,UAAAA,KAAK,EAAEO,QAAQ,CAACP,KAAT,GAAiBG;AADrB,SAAP;AAGH,OAJD;AAKH,KARD;;AASAK,IAAAA,WAAW,CAAEN,QAAF,EAAY,IAAZ,CAAX;AACH;;AACDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAI,MAAA,SAAS,EAAG,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWY,IAAhB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKZ,KAAL,CAAWa,MAAhB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKZ,KAAL,CAAWC,KAAjB,CAHJ,CADJ;AAOH;;AA3BuC;AA8B5CJ,IAAI,CAACgB,SAAL,GAAiB;AACbF,EAAAA,IAAI,EAAEf,SAAS,CAACkB,MAAV,CAAiBC,UADV;AAEbH,EAAAA,MAAM,EAAEhB,SAAS,CAACkB,MAAV,CAAiBC,UAFZ;AAGbd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MAAV,CAAiBD;AAHX,CAAjB","sourcesContent":["import React, { Component } from 'react';\r\nimport './Coin.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Coin extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            price: this.props.price\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const callback = () => {\r\n            // set the state to a new random value\r\n            const randomPercentage = 0.995 + Math.random()*0.01;\r\n            this.setState( function(oldState) {\r\n                return {\r\n                    price: oldState.price * randomPercentage\r\n                };\r\n            })\r\n        }\r\n        setInterval( callback, 1000);\r\n    }\r\n    render() {\r\n        return (\r\n            <tr className = 'coin-row'>\r\n                <td>{this.props.name}</td>\r\n                <td>{this.props.ticker}</td>\r\n                <td>${this.state.price}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    ticker: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n}"]},"metadata":{},"sourceType":"module"}