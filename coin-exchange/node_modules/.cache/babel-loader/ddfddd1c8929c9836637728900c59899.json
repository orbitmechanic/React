{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js\";\nimport React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      showBalance: true,\n      coinData: [{\n        name: 'BitCoin',\n        ticker: 'BTC',\n        balance: 0.5,\n        price: 9999.99\n      }, {\n        name: 'Ethereum',\n        ticker: 'ETH',\n        balance: 32.0,\n        price: 299.0\n      }, {\n        name: 'Tether',\n        ticker: 'USDT',\n        balance: 0.0,\n        price: 1.0\n      }, {\n        name: 'Ripple',\n        ticker: 'XRP',\n        balance: 1000,\n        price: 0.2\n      }, {\n        name: 'BitCoin Cash',\n        ticker: 'BCH',\n        balance: 0.0,\n        price: 298.99\n      }]\n    };\n\n    this.componentDidMount = () => {\n      console.log('Mount');\n    };\n\n    this.toggleBalanceVisibility = () => {\n      this.setState({\n        showBalance: !this.state.showBalance\n      });\n    };\n\n    this.handleRefresh = valueChangeTicker => {\n      const newCoinData = this.state.coinData.map(values => {\n        let newValues = { ...values\n        };\n\n        if (valueChangeTicker === values.ticker) {\n          let randomPercentage = 0.995 + Math.random() * 0.01;\n          newValues.price *= randomPercentage;\n        }\n\n        return newValues;\n      });\n      this.setState({\n        coinData: newCoinData\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      apName: this.state.apName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AccountBalance, {\n      amount: this.state.balance,\n      showBalance: this.state.showBalance,\n      toggleBalanceVisibility: this.toggleBalanceVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CoinList, {\n      coinData: this.state.coinData,\n      handleRefresh: this.handleRefresh,\n      showBalance: this.state.showBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js"],"names":["React","AppHeader","CoinList","AccountBalance","styled","AppStyle","div","App","Component","state","apName","balance","showBalance","coinData","name","ticker","price","componentDidMount","console","log","toggleBalanceVisibility","setState","handleRefresh","valueChangeTicker","newCoinData","map","values","newValues","randomPercentage","Math","random","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\n\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`\n\nclass App extends React.Component {\n  state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      showBalance: true,\n      coinData: [\n        { name: 'BitCoin',\n          ticker:'BTC',\n          balance: 0.5,\n          price: 9999.99,\n        },\n        { name: 'Ethereum',\n          ticker: 'ETH',\n          balance: 32.0,\n          price: 299.0,\n        },\n        { name: 'Tether',\n          ticker:'USDT',\n          balance: 0.0,\n          price: 1.0,\n        },\n        { name: 'Ripple',\n          ticker: 'XRP',\n          balance: 1000,\n          price: 0.2,\n        },\n        { name: 'BitCoin Cash',\n          ticker: 'BCH',\n          balance: 0.0,\n          price: 298.99,\n        }\n      ],\n  };\n  componentDidMount = () => {\n    console.log('Mount');\n  }\n  toggleBalanceVisibility = () => {\n    this.setState({showBalance:!this.state.showBalance});\n  }\n  handleRefresh = (valueChangeTicker) => {\n    const newCoinData = this.state.coinData.map((values) => {\n      let newValues = {...values};\n      if ( valueChangeTicker === values.ticker) {\n        let randomPercentage = 0.995 + Math.random()*0.01;\n        newValues.price *= randomPercentage;\n      }\n      return newValues;\n    });  \n    \n    this.setState({coinData: newCoinData});\n  }\n  render() {\n    return (\n      <AppStyle>\n        <AppHeader \n          apName={this.state.apName}/>\n        <AccountBalance \n          amount={this.state.balance} \n          showBalance={this.state.showBalance}\n          toggleBalanceVisibility={this.toggleBalanceVisibility}/>\n        <CoinList \n          coinData={this.state.coinData} \n          handleRefresh={this.handleRefresh} \n          showBalance={this.state.showBalance} />\n      </AppStyle>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}