{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js\";\nimport React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      displayBalance: false,\n      coinData: [{\n        name: 'BitCoin',\n        ticker: 'BTC',\n        balance: 0.5,\n        price: 9999.99\n      }, {\n        name: 'Ethereum',\n        ticker: 'ETH',\n        balance: 32.0,\n        price: 299.0\n      }, {\n        name: 'Tether',\n        ticker: 'USDT',\n        balance: 0.0,\n        price: 1.0\n      }, {\n        name: 'Ripple',\n        ticker: 'XRP',\n        balance: 1000,\n        price: 0.2\n      }, {\n        name: 'BitCoin Cash',\n        ticker: 'BCH',\n        balance: 0.0,\n        price: 298.99\n      }]\n    };\n    this.handleRefresh = this.handleRefresh.bind(this);\n  }\n\n  handleRefresh(valueChangeTicker) {\n    const newCoinData = this.state.coinData.map(function ({\n      ticker,\n      name,\n      price\n    }) {\n      let newPrice = price;\n\n      if (valueChangeTicker === ticker) {\n        const randomPercentage = 0.995 + Math.random() * 0.01;\n        newPrice = newPrice * randomPercentage;\n      }\n\n      return {\n        ticker,\n        name,\n        price: newPrice\n      };\n    });\n    this.setState({\n      coinData: newCoinData\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      apName: this.state.apName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AccountBalance, {\n      amount: this.state.balance,\n      showBalance: this.state.displayBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CoinList, {\n      coinData: this.state.coinData,\n      handleRefresh: this.handleRefresh,\n      showBalance: this.state.displayBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js"],"names":["React","AppHeader","CoinList","AccountBalance","styled","AppStyle","div","App","Component","constructor","props","state","apName","balance","displayBalance","coinData","name","ticker","price","handleRefresh","bind","valueChangeTicker","newCoinData","map","newPrice","randomPercentage","Math","random","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\n\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      displayBalance: false,\n      coinData: [\n        { name: 'BitCoin',\n          ticker:'BTC',\n          balance: 0.5,\n          price: 9999.99,\n        },\n        { name: 'Ethereum',\n          ticker: 'ETH',\n          balance: 32.0,\n          price: 299.0,\n        },\n        { name: 'Tether',\n          ticker:'USDT',\n          balance: 0.0,\n          price: 1.0,\n        },\n        { name: 'Ripple',\n          ticker: 'XRP',\n          balance: 1000,\n          price: 0.2,\n        },\n        { name: 'BitCoin Cash',\n          ticker: 'BCH',\n          balance: 0.0,\n          price: 298.99,\n        }\n      ],\n    };\n    this.handleRefresh = this.handleRefresh.bind(this);\n  }\n  handleRefresh(valueChangeTicker) {\n    const newCoinData = this.state.coinData.map(function ({ticker, name, price}) {\n      let newPrice = price;\n      if ( valueChangeTicker === ticker) {\n        const randomPercentage = 0.995 + Math.random()*0.01;\n        newPrice = newPrice * randomPercentage;\n      }\n      return {\n        ticker,\n        name,\n        price: newPrice,\n      }\n    });  \n    \n    this.setState({coinData: newCoinData});\n  }\n  render() {\n    return (\n      <AppStyle>\n        <AppHeader apName={this.state.apName}/>\n        <AccountBalance amount={this.state.balance} \n                        showBalance={this.state.displayBalance}/>\n        <CoinList coinData={this.state.coinData} \n                  handleRefresh={this.handleRefresh} \n                  showBalance={this.state.displayBalance} />\n      </AppStyle>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}