{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js\";\nimport React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      showBalance: true,\n      coinData: [{\n        name: 'BitCoin',\n        ticker: 'BTC',\n        balance: 0.5,\n        price: 9999.99\n      }, {\n        name: 'Ethereum',\n        ticker: 'ETH',\n        balance: 32.0,\n        price: 299.0\n      }, {\n        name: 'Tether',\n        ticker: 'USDT',\n        balance: 0.0,\n        price: 1.0\n      }, {\n        name: 'Ripple',\n        ticker: 'XRP',\n        balance: 1000,\n        price: 0.2\n      }, {\n        name: 'BitCoin Cash',\n        ticker: 'BCH',\n        balance: 0.0,\n        price: 298.99\n      }]\n    };\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.toggleBalanceVisibility = this.toggleBalanceVisibility.bind(this);\n  }\n\n  toggleBalanceVisibility() {\n    this.setState({\n      showBalance: !this.state.showBalance\n    });\n  }\n\n  handleRefresh(valueChangeTicker) {\n    const newCoinData = this.state.coinData.map(function ({\n      ticker,\n      name,\n      price\n    }) {\n      let newPrice = price;\n\n      if (valueChangeTicker === ticker) {\n        const randomPercentage = 0.995 + Math.random() * 0.01;\n        newPrice = newPrice * randomPercentage;\n      }\n\n      return {\n        ticker,\n        name,\n        balance,\n        price: newPrice\n      };\n    });\n    this.setState({\n      coinData: newCoinData\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      apName: this.state.apName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AccountBalance, {\n      amount: this.state.balance,\n      showBalance: this.state.showBalance,\n      toggleBalanceVisibility: this.toggleBalanceVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CoinList, {\n      coinData: this.state.coinData,\n      handleRefresh: this.handleRefresh,\n      showBalance: this.state.showBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js"],"names":["React","AppHeader","CoinList","AccountBalance","styled","AppStyle","div","App","Component","constructor","props","state","apName","balance","showBalance","coinData","name","ticker","price","handleRefresh","bind","toggleBalanceVisibility","setState","valueChangeTicker","newCoinData","map","newPrice","randomPercentage","Math","random","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAI;;;;CAA5B;;AAMA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,eADG;AAEXC,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,WAAW,EAAE,IAHF;AAIXC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,IAAI,EAAE,SAAR;AACEC,QAAAA,MAAM,EAAC,KADT;AAEEJ,QAAAA,OAAO,EAAE,GAFX;AAGEK,QAAAA,KAAK,EAAE;AAHT,OADQ,EAMR;AAAEF,QAAAA,IAAI,EAAE,UAAR;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEJ,QAAAA,OAAO,EAAE,IAFX;AAGEK,QAAAA,KAAK,EAAE;AAHT,OANQ,EAWR;AAAEF,QAAAA,IAAI,EAAE,QAAR;AACEC,QAAAA,MAAM,EAAC,MADT;AAEEJ,QAAAA,OAAO,EAAE,GAFX;AAGEK,QAAAA,KAAK,EAAE;AAHT,OAXQ,EAgBR;AAAEF,QAAAA,IAAI,EAAE,QAAR;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEJ,QAAAA,OAAO,EAAE,IAFX;AAGEK,QAAAA,KAAK,EAAE;AAHT,OAhBQ,EAqBR;AAAEF,QAAAA,IAAI,EAAE,cAAR;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEJ,QAAAA,OAAO,EAAE,GAFX;AAGEK,QAAAA,KAAK,EAAE;AAHT,OArBQ;AAJC,KAAb;AAgCA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BD,IAA7B,CAAkC,IAAlC,CAA/B;AACD;;AACDC,EAAAA,uBAAuB,GAAG;AACxB,SAAKC,QAAL,CAAc;AAACR,MAAAA,WAAW,EAAC,CAAC,KAAKH,KAAL,CAAWG;AAAzB,KAAd;AACD;;AACDK,EAAAA,aAAa,CAACI,iBAAD,EAAoB;AAC/B,UAAMC,WAAW,GAAG,KAAKb,KAAL,CAAWI,QAAX,CAAoBU,GAApB,CAAwB,UAAU;AAACR,MAAAA,MAAD;AAASD,MAAAA,IAAT;AAAeE,MAAAA;AAAf,KAAV,EAAiC;AAC3E,UAAIQ,QAAQ,GAAGR,KAAf;;AACA,UAAKK,iBAAiB,KAAKN,MAA3B,EAAmC;AACjC,cAAMU,gBAAgB,GAAG,QAAQC,IAAI,CAACC,MAAL,KAAc,IAA/C;AACAH,QAAAA,QAAQ,GAAGA,QAAQ,GAAGC,gBAAtB;AACD;;AACD,aAAO;AACLV,QAAAA,MADK;AAELD,QAAAA,IAFK;AAGLH,QAAAA,OAHK;AAILK,QAAAA,KAAK,EAAEQ;AAJF,OAAP;AAMD,KAZmB,CAApB;AAcA,SAAKJ,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAAES;AAAX,KAAd;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWC,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,OADrB;AAEE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,WAF1B;AAGE,MAAA,uBAAuB,EAAE,KAAKO,uBAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAOE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWI,QADvB;AAEE,MAAA,aAAa,EAAE,KAAKI,aAFtB;AAGE,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWG,WAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAcD;;AAzE+B;;AA4ElC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\n\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      showBalance: true,\n      coinData: [\n        { name: 'BitCoin',\n          ticker:'BTC',\n          balance: 0.5,\n          price: 9999.99,\n        },\n        { name: 'Ethereum',\n          ticker: 'ETH',\n          balance: 32.0,\n          price: 299.0,\n        },\n        { name: 'Tether',\n          ticker:'USDT',\n          balance: 0.0,\n          price: 1.0,\n        },\n        { name: 'Ripple',\n          ticker: 'XRP',\n          balance: 1000,\n          price: 0.2,\n        },\n        { name: 'BitCoin Cash',\n          ticker: 'BCH',\n          balance: 0.0,\n          price: 298.99,\n        }\n      ],\n    };\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.toggleBalanceVisibility = this.toggleBalanceVisibility.bind(this);\n  }\n  toggleBalanceVisibility() {\n    this.setState({showBalance:!this.state.showBalance});\n  }\n  handleRefresh(valueChangeTicker) {\n    const newCoinData = this.state.coinData.map(function ({ticker, name, price}) {\n      let newPrice = price;\n      if ( valueChangeTicker === ticker) {\n        const randomPercentage = 0.995 + Math.random()*0.01;\n        newPrice = newPrice * randomPercentage;\n      }\n      return {\n        ticker,\n        name,\n        balance,\n        price: newPrice,\n      }\n    });  \n    \n    this.setState({coinData: newCoinData});\n  }\n  render() {\n    return (\n      <AppStyle>\n        <AppHeader \n          apName={this.state.apName}/>\n        <AccountBalance \n          amount={this.state.balance} \n          showBalance={this.state.showBalance}\n          toggleBalanceVisibility={this.toggleBalanceVisibility}/>\n        <CoinList \n          coinData={this.state.coinData} \n          handleRefresh={this.handleRefresh} \n          showBalance={this.state.showBalance} />\n      </AppStyle>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}