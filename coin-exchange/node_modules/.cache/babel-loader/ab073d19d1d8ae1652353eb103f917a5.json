{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js\";\nimport React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\nimport axios from 'axios';\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`;\nconst COIN_COUNT = 10;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      showBalance: true,\n      coinData: [\n        /*\n        { name: 'BitCoin',\n          ticker:'BTC',\n          balance: 0.5,\n          price: 9999.99,\n        },\n        { name: 'Ethereum',\n          ticker: 'ETH',\n          balance: 32.0,\n          price: 299.0,\n        },\n        { name: 'Tether',\n          ticker:'USDT',\n          balance: 0.0,\n          price: 1.0,\n        },\n        { name: 'Ripple',\n          ticker: 'XRP',\n          balance: 1000,\n          price: 0.2,\n        },\n        { name: 'BitCoin Cash',\n          ticker: 'BCH',\n          balance: 0.0,\n          price: 298.99,\n        }\n        */\n      ]\n    };\n\n    this.componentDidMount = async () => {\n      let repsonse = await axios.get('https://api.coinpaprika.com/v1/coins');\n      let coinData = response.data.slice(0, COIN_COUNT).map(function (coin) {\n        return {\n          key: coin.id,\n          name: coin.name,\n          ticker: coin.symbol,\n          balance: 0,\n          price: 0\n        };\n      });\n      this.setState({\n        coinData\n      });\n    };\n\n    this.toggleBalanceVisibility = () => {\n      this.setState({\n        showBalance: !this.state.showBalance\n      });\n    };\n\n    this.handleRefresh = valueChangeTicker => {\n      const newCoinData = this.state.coinData.map(values => {\n        let newValues = { ...values\n        };\n\n        if (valueChangeTicker === values.ticker) {\n          let randomPercentage = 0.995 + Math.random() * 0.01;\n          newValues.price *= randomPercentage;\n        }\n\n        return newValues;\n      });\n      this.setState({\n        coinData: newCoinData\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      apName: this.state.apName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AccountBalance, {\n      amount: this.state.balance,\n      showBalance: this.state.showBalance,\n      toggleBalanceVisibility: this.toggleBalanceVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CoinList, {\n      coinData: this.state.coinData,\n      handleRefresh: this.handleRefresh,\n      showBalance: this.state.showBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/orbit/Documents/code/React/coin-exchange/src/App.js"],"names":["React","AppHeader","CoinList","AccountBalance","styled","axios","AppStyle","div","COIN_COUNT","App","Component","state","apName","balance","showBalance","coinData","componentDidMount","repsonse","get","response","data","slice","map","coin","key","id","name","ticker","symbol","price","setState","toggleBalanceVisibility","handleRefresh","valueChangeTicker","newCoinData","values","newValues","randomPercentage","Math","random","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppHeader from './components/AppHeader';\nimport CoinList from './components/CoinList';\nimport AccountBalance from './components/AccountBalance';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst AppStyle = styled.div`\n  text-align: center;\n  background-color: darkslategray;\n  color: #cccccc;\n`\nconst COIN_COUNT = 10;\nclass App extends React.Component {\n  state = {\n      apName: 'Coin Exchange',\n      balance: 10000,\n      showBalance: true,\n      coinData: [\n        /*\n        { name: 'BitCoin',\n          ticker:'BTC',\n          balance: 0.5,\n          price: 9999.99,\n        },\n        { name: 'Ethereum',\n          ticker: 'ETH',\n          balance: 32.0,\n          price: 299.0,\n        },\n        { name: 'Tether',\n          ticker:'USDT',\n          balance: 0.0,\n          price: 1.0,\n        },\n        { name: 'Ripple',\n          ticker: 'XRP',\n          balance: 1000,\n          price: 0.2,\n        },\n        { name: 'BitCoin Cash',\n          ticker: 'BCH',\n          balance: 0.0,\n          price: 298.99,\n        }\n      */]\n  };\n  componentDidMount = async () => {\n    let repsonse = await axios.get('https://api.coinpaprika.com/v1/coins')\n    let coinData = response.data.slice(0,COIN_COUNT).map( function (coin) {\n      return {\n        key:     coin.id,\n        name:    coin.name,\n        ticker:  coin.symbol,\n        balance: 0,\n        price:   0,\n      };\n    });\n    this.setState({ coinData});\n  };   \n\n  toggleBalanceVisibility = () => {\n    this.setState({showBalance:!this.state.showBalance});\n  }\n\n  handleRefresh = (valueChangeTicker) => {\n    const newCoinData = this.state.coinData.map((values) => {\n      let newValues = {...values};\n      if ( valueChangeTicker === values.ticker) {\n        let randomPercentage = 0.995 + Math.random()*0.01;\n        newValues.price *= randomPercentage;\n      }\n      return newValues;\n    });  \n    this.setState({coinData: newCoinData});\n  }\n\n  render() {\n    return (\n      <AppStyle>\n        <AppHeader \n          apName={this.state.apName}/>\n        <AccountBalance \n          amount={this.state.balance} \n          showBalance={this.state.showBalance}\n          toggleBalanceVisibility={this.toggleBalanceVisibility}/>\n        <CoinList \n          coinData={this.state.coinData} \n          handleRefresh={this.handleRefresh} \n          showBalance={this.state.showBalance} />\n      </AppStyle>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}